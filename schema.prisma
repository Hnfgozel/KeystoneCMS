// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  mall      Mall?     @relation("Mall_manager")
  createdAt DateTime? @default(now())
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Mall {
  id        String    @id @default(cuid())
  name      String    @default("")
  address   String    @default("")
  province  String    @default("")
  manager   User?     @relation("Mall_manager", fields: [managerId], references: [id])
  managerId String?   @unique @map("manager")
  stores    Store[]   @relation("Store_mall")
  createdAt DateTime? @default(now())
}

model Client {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  phone     String    @default("")
  stores    Store[]   @relation("Store_owner")
  createdAt DateTime? @default(now())
}

model Store {
  id          String           @id @default(cuid())
  name        String           @default("")
  storeNumber String           @default("")
  floor       Int?
  rentAmount  Float
  status      StoreStatusType?
  mall        Mall?            @relation("Store_mall", fields: [mallId], references: [id])
  mallId      String?          @map("mall")
  owner       Client?          @relation("Store_owner", fields: [ownerId], references: [id])
  ownerId     String?          @map("owner")
  payments    Payment[]        @relation("Payment_store")
  createdAt   DateTime?        @default(now())

  @@index([mallId])
  @@index([ownerId])
}

model Payment {
  id            String                    @id @default(cuid())
  amount        Float
  paymentDate   DateTime
  paymentMethod PaymentPaymentMethodType?
  store         Store?                    @relation("Payment_store", fields: [storeId], references: [id])
  storeId       String?                   @map("store")
  receiptNumber String                    @default("")
  notes         String                    @default("")
  createdAt     DateTime?                 @default(now())

  @@index([storeId])
}

enum StoreStatusType {
  active
  inactive
}

enum PaymentPaymentMethodType {
  bank_transfer
  cash
  check
}
